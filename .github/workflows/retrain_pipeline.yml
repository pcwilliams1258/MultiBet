name: Automated Model Retraining Pipeline

on:
  schedule:
    # Run weekly on Sunday at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  retrain-models:
    runs-on: ubuntu-latest
    name: Retrain and Deploy Models
    
    permissions:
      contents: read
      id-token: write  # Required for Google Cloud authentication
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          # Use Workload Identity Federation for secure authentication
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
          # Fallback to service account key if WIF is not configured
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Verify BigQuery access
        run: |
          echo "Verifying BigQuery access..."
          bq ls --max_results=1 || echo "BigQuery access verification failed - check authentication"
      
      - name: Execute model retraining pipeline
        env:
          # Environment variables for the retraining script
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          BIGQUERY_DATASET: ${{ secrets.BIGQUERY_DATASET || 'multibet_data' }}
          MODEL_REGISTRY_BUCKET: ${{ secrets.MODEL_REGISTRY_BUCKET }}
        run: |
          echo "Starting automated model retraining pipeline..."
          python retrain_models.py
      
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: retraining-logs-${{ github.run_id }}
          path: |
            *.log
            logs/
          retention-days: 30
      
      - name: Notify on completion
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Model retraining pipeline completed successfully"
          else
            echo "❌ Model retraining pipeline failed"
          fi
          echo "Pipeline execution completed at $(date)"